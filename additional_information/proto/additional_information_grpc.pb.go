// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: proto/additional_information.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AdditionalInformationServiceClient is the client API for AdditionalInformationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AdditionalInformationServiceClient interface {
	CreateAdditionalInfo(ctx context.Context, in *CreateAdditionalInfoReq, opts ...grpc.CallOption) (*CreateAdditionalInfoResp, error)
}

type additionalInformationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdditionalInformationServiceClient(cc grpc.ClientConnInterface) AdditionalInformationServiceClient {
	return &additionalInformationServiceClient{cc}
}

func (c *additionalInformationServiceClient) CreateAdditionalInfo(ctx context.Context, in *CreateAdditionalInfoReq, opts ...grpc.CallOption) (*CreateAdditionalInfoResp, error) {
	out := new(CreateAdditionalInfoResp)
	err := c.cc.Invoke(ctx, "/grpc.AdditionalInformationService/CreateAdditionalInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdditionalInformationServiceServer is the server API for AdditionalInformationService service.
// All implementations must embed UnimplementedAdditionalInformationServiceServer
// for forward compatibility
type AdditionalInformationServiceServer interface {
	CreateAdditionalInfo(context.Context, *CreateAdditionalInfoReq) (*CreateAdditionalInfoResp, error)
	mustEmbedUnimplementedAdditionalInformationServiceServer()
}

// UnimplementedAdditionalInformationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAdditionalInformationServiceServer struct {
}

func (UnimplementedAdditionalInformationServiceServer) CreateAdditionalInfo(context.Context, *CreateAdditionalInfoReq) (*CreateAdditionalInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdditionalInfo not implemented")
}
func (UnimplementedAdditionalInformationServiceServer) mustEmbedUnimplementedAdditionalInformationServiceServer() {
}

// UnsafeAdditionalInformationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdditionalInformationServiceServer will
// result in compilation errors.
type UnsafeAdditionalInformationServiceServer interface {
	mustEmbedUnimplementedAdditionalInformationServiceServer()
}

func RegisterAdditionalInformationServiceServer(s grpc.ServiceRegistrar, srv AdditionalInformationServiceServer) {
	s.RegisterService(&AdditionalInformationService_ServiceDesc, srv)
}

func _AdditionalInformationService_CreateAdditionalInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAdditionalInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdditionalInformationServiceServer).CreateAdditionalInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AdditionalInformationService/CreateAdditionalInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdditionalInformationServiceServer).CreateAdditionalInfo(ctx, req.(*CreateAdditionalInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

// AdditionalInformationService_ServiceDesc is the grpc.ServiceDesc for AdditionalInformationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AdditionalInformationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.AdditionalInformationService",
	HandlerType: (*AdditionalInformationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAdditionalInfo",
			Handler:    _AdditionalInformationService_CreateAdditionalInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/additional_information.proto",
}
